@startuml
title Payment Module Class Diagram

' Define package structure
package "payment.controller" {
    class PaymentController {
        - paymentService : PaymentService
        + createPayment(payment: Payment) : Payment
        + getById(paymentId: String) : ResponseEntity<Payment>
        + getByName(paymentName: String) : ResponseEntity<Payment>
        + getByBankNumber(bankNumber: String) : ResponseEntity<Payment>
        + updatePayment(paymentId: String, payment: Payment) : ResponseEntity<Payment>
        + deletePayment(paymentId: String) : ResponseEntity<Void>
        + getAllPayments() : List<Payment>
    }
}

package "payment.service" {
    interface PaymentService {
        + createPayment(payment: Payment) : Payment
        + updatePaymentName(id: String, newName: String)
        + updatePaymentBankNumber(id: String, newBankNumber: String)
        + findById(id: String) : Payment
        + findByName(name: String) : Payment
        + findByBankNumber(accountNumber: String) : Payment
        + findAllPayment() : List<Payment>
        + updatePayment(id: String, payment: Payment) : Payment
        + deletePayment(id: String)
    }
}

package "payment.service.impl" {
    class PaymentServiceImpl {
        - paymentRepository : PaymentRepository
        + createPayment(payment: Payment) : Payment
        + updatePaymentName(id: String, newName: String)
        + updatePaymentBankNumber(id: String, newBankNumber: String)
        + findById(id: String) : Payment
        + findByName(name: String) : Payment
        + findByBankNumber(accountNumber: String) : Payment
        + findAllPayment() : List<Payment>
        + updatePayment(id: String, payment: Payment) : Payment
        + deletePayment(id: String)
    }
}

package "payment.repository" {
    class PaymentRepository {
        - paymentMethods : List<Payment>
        + save(payment: Payment) : Payment
        + findById(paymentId: String) : Payment
        + findByName(name: String) : Payment
        + findByBankNumber(accountNumber: String) : Payment
        + findAll() : List<Payment>
        + deletePayment(paymentId: String) : boolean
    }
}

package "payment.model" {
    class Payment {
        - paymentId : String
        - paymentName : String
        - paymentBankNumber : String
        + Payment()
        + Payment(name: String, bankNumber: String)
        + getPaymentId() : String
        + getPaymentName() : String
        + getPaymentBankNumber() : String
        + setPaymentId(id: String)
        + setPaymentName(name: String)
        + setPaymentBankNumber(bankNumber: String)
    }
}

' Relationships
PaymentController --> PaymentService
PaymentServiceImpl ..|> PaymentService
PaymentServiceImpl --> PaymentRepository
PaymentRepository --> Payment
PaymentServiceImpl --> Payment
PaymentController --> Payment

@enduml